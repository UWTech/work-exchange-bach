---
score: 'cf'
rubrics:
  - name: new_org
    validate:
    - [org_name, str]
    - [team_manager, list]
    - [spaces, list]
    - [app_team_github_team, int, str]
    - [bitbucket_url, str]
    - [env_type, str]
    - [control_repo_url, str]
    - [compiler_repo_url, str]
    - [bitbucket_proj, str]
    task_list:
    - name: 'generate_team_repo_url'
      value: 1
      req_state: 0
      mandatory: true
    - name: 'generate_org_repo_url'
      value: 2
      req_state: 1
      mandatory: true
    - name: 'build_team_repo'
      value: 4
      req_state: 2
      mandatory: true
    - name: 'build_org_repo'
      value: 8
      req_state: 6
      mandatory: true
    - name: 'upload_org_pipeline'
      value: 16
      req_state: 8
      mandatory: true
    - name: 'update_cf_mgmt_repo'
      value: 32
      req_state: 16
      mandatory: true
    - name: 'upload_cf_mgmt_pipeline'
      value: 64
      req_state: 32
      mandatory: true
    - name: 'email_members'
      value: 128
      req_state: 64
      mandatory: true
    - name: 'request_bitbucket_user_permissions'
      value: 256
      req_state: 4
      mandatory: false
  - name: build_org_from_cf
    validate:
    - [org_name, str]
    - [team_manager, str, list]
    - [bitbucket_url, str]
    - [foundation, str]
    - [bitbucket_proj, str]
    task_list:
    - name: generate_team_repo_url
      value: 1
      req_state: 0
      mandatory: true
    - name: generate_org_repo_url
      value: 2
      req_state: 1
      mandatory: true
    - name: build_from_cf_org
      value: 4
      req_state: 2
      mandatory: true
    - name: build_team_repo
      value: 8
      req_state: 6
      mandatory: true
    - name: upload_org_pipeline
      value: 16
      req_state: 8
      mandatory: true
    - name: update_cf_mgmt_repo
      value: 32
      req_state: 16
      mandatory: true
    - name: upload_cf_mgmt_pipeline
      value: 64
      req_state: 32
      mandatory: true
    - name: email_members
      value: 128
      req_state: 64
      mandatory: true
  - name: delete_org
    validate:
    - [org_name, str]
    - [app_team_github_team, int, str]
    - [app_team_manager_github_user, str]
    task_list:
    - name: 'remove_org_from_pipeline_repo'
      value: 1
      req_state: 0
      mandatory: true
    - name: 'remove_org_from_pipeline'
      value: 2
      req_state: 1
      mandatory: true
    # - name: 'remove_org_from_github'
    #   value: 4
    #   req_state: 2
    # - name: 'remove_team_from_github'
    #   value: 8
    #   req_state: 4
definitions:
  request_bitbucket_user_permissions:
    assign_to_key: bitbucket_user_permissions_tracking_key
    routing_key: requests.process.git_remotes.add_bitbucket_user_permissions
    keys:
      bitbucket_url: [direct, bitbucket_url]
      repo_slug: [compound, '{0}-team', org_name]
      bitbucket_proj: [direct, bitbucket_proj]
      readers: [primitive, []]
      writers: [direct, team_manager]
      admins: [primitive, []]
  generate_team_repo_url:
    assign_to_key: team_ssl_remote_url
    routing_key: bitbucket.generate_repo_url
    keys:
      bitbucket_url: [direct, bitbucket_url]
      name: [compound, '{0}-team', org_name]
      bitbucket_proj: [direct, bitbucket_proj]
      # teams = []
      # team = {
      #     "id":input_stuff.body['app_team_github_team'],
      #     "permission":"pull"
      # }
      # teams.append(team)
      # if GITHUB_ADMIN_TEAM != '-1':
      #     teams.append({"id":GITHUB_ADMIN_TEAM, "permission":"admin"})
      # body['teams'] = teams
      # body['collabs'] = [{
      #     'name':input_stuff.body['app_team_manager_github_user'],
      #     'permission':'push'}]
  generate_org_repo_url:
    assign_to_key: org_ssl_remote_url
    routing_key: bitbucket.generate_repo_url
    keys:
      bitbucket_url: [direct, bitbucket_url]
      name: [compound, '{0}-org', org_name]
      bitbucket_proj: [direct, bitbucket_proj]
      # teams = []
      # team = {
      #     "id":input_stuff.body['app_team_github_team'],
      #     "permission":"pull"
      # }
      # teams.append(team)
      # if GITHUB_ADMIN_TEAM != '-1':
      #     teams.append({"id":GITHUB_ADMIN_TEAM, "permission":"admin"})
      # body['teams'] = teams
  build_team_repo:
    assign_to_key: 'team_repo_complete'
    routing_key: 'template_repos.cf_team_repo'
    keys:
      ssl_url: [direct, team_ssl_remote_url]
      org_name: [direct, org_name]
      team_manager: [direct, team_manager]
      spaces: [direct, spaces]
  build_org_repo:
    assign_to_key: 'org_repo_complete'
    routing_key: 'template_repos.cf_org_repo'
    keys:
      team_ssl_url: [direct, team_ssl_remote_url]
      org_ssl_url: [direct, org_ssl_remote_url]
      org_name: [direct, org_name]
      spaces: [direct, spaces]
  upload_org_pipeline:
    assign_to_key: 'org_pipeline_upload'
    routing_key: 'fly.set_pipeline'
    keys:
      clone_url: [direct, org_ssl_remote_url]
      pipeline_name: [compound, '{0}-{1}-pipeline', env_type, org_name]
      include_git: [primitive, true]
  update_cf_mgmt_repo:
    assign_to_key: 'cf_mgmt_update'
    routing_key: 'template_repos.add_submodule'
    keys:
      org_name: [direct, org_name]
      org_ssl_url: [direct, org_ssl_remote_url]
      control_repo_url: [direct, control_repo_url]
      compiler_repo_url: [direct, compiler_repo_url]
  upload_cf_mgmt_pipeline:
    assign_to_key: 'cf_mgmt_pipeline_upload'
    routing_key: 'fly.set_pipeline'
    keys:
      clone_url: [direct, compiler_repo_url]
      pipeline_name: [compound, '{0}-compiler', env_type]
      include_git: [primitive, true]
  email_members:
    assign_to_key: 'cf_org_complete_email'
    routing_key: 'email.send_cf_org_mail_template'
    keys:
      org_name: [direct, org_name]
      team_manager: [direct, team_manager]
      spaces: [direct, spaces]
      team_ssl_url: [direct, team_ssl_remote_url]
      org_ssl_url: [direct, org_ssl_remote_url]
      env_type: [direct, env_type]
  remove_org_from_pipeline_repo:
    assign_to_key: 'remove_org_from_pipeline_repo'
    routing_key: 'template_repos.remove_submodule'
    keys:
      control_repo_url: [direct, control_repo_url]
      compiler_repo_url: [direct, compiler_repo_url]
      submodule: [direct, org_name]
  remove_org_from_pipeline:
    assign_to_key: 'remove_org_from_pipeline'
    routing_key: 'fly.set_pipeline'
    keys:
      clone_url: [direct, compiler_repo_url]
      pipeline_name: [compound, '{0}-compiler', 'env_type']
      include_git: [primitive, true]
  build_from_cf_org:
    assign_to_key: 'spaces'
    routing_key: 'template_repos.build_from_cf_org'
    keys:
      team_ssl_url: [direct, team_ssl_remote_url]
      org_ssl_url: [direct, org_ssl_remote_url]
      org_name: [direct, org_name]
      foundation: [direct, foundation]
